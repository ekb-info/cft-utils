#!/bin/sh

CONFIG_FILE='/etc/cft/cft.conf'

print_help() {
  echo "USAGE: ${0##*\/} [-v]"
  echo '     -s --show             Show selected groups (D,F,d,f,l,s,c,p,o,g,U,E,e,g,b,i,u)'
  echo "     -c --config <file>    Use config <file> instead of default (${CONFIG_FILE})"
  echo '     -C --show-files       Show FILES section'
  echo '     -P --show-packages    Show PACKAGES section'
  echo '     -v --verbose          Be verbose'
  echo '     -i --ids              Show identifiers for selected groups'
  echo '     -h --help             Print this help'
  echo '
Group identifiers:
FILES:
         D - UNTRACKED DIRS
         F - UNTRACKED FILES
         d - MISSING DIRS
         f - MISSING FILES
         l - MISSING LINKS
         s - MODIFIED LINKS
         c - MODIFIED FILES
         p - CHANGED PERMISSIONS
         o - CHANGED OWNER
         g - CHANGED GROUP
         U - UNKNOWN (!) CHANGE
PACKAGES:
         E - UNTRACKED PACKAGES
         e - MISSING PACKAGES
         x - UPGRADE PACKAGES
         b - DOWNGRADE PACKAGES
         i - CHANGED IUSE FLAGS
         u - CHANGED USE FLAGS'
}

SHOW_ITEMS="DFdflscpogUEexbiu"

# разбор параметров
while [ -n "${1}" ]; do
  case "${1}" in

    -v|--verbose)
      VERBOSE=yes
      ;;
    -s|--show)
      if [ -n "${2}" ]; then
        SHOW_ITEMS="${2}"
      else
        echo 'show items argument required' >&2
        exit 1
      fi
      shift
      ;;
    -c|--config)
      CONFIG_FILE="${2}"
      [ "${CONFIG_FILE#/}" = "${CONFIG_FILE}" ] && CONFIG_FILE="/etc/cft/${CONFIG_FILE}"
      [ -e "${CONFIG_FILE}" ] || CONFIG_FILE="${CONFIG_FILE%.conf}.conf"
      shift
      ;;
    -C|--show-files)
      SHOW_ITEMS="DFdflscpogU"
      ;;
    -P|--show-packages)
      SHOW_ITEMS="Eexbiu"
      ;;
    -i|--ids)
      SHOW_IDS=yes
      ;;
    -h|--help)
      print_help
      exit
      ;;
    *)
      print_help
      echo "Unknown option ${1}" >&2
      exit 1
      ;;
  esac
  shift
done

source "${CONFIG_FILE}" || exit 1

print_block() {
  [ -z "${2}" ] && return 0
  [ "${SHOW_ITEMS/[${3}]/}" = "${SHOW_ITEMS}" ] && return 0
  COUNT=$(echo "${2}" |wc -l)
  echo "==${SHOW_IDS:+${3}=} ${1} [${COUNT}]"
  if [ "${VERBOSE}" = yes -a -n "${2}" ]; then
    echo "${2}"
    echo
  fi
}

if [ "${SHOW_ITEMS/[DFdflscpogU]/}" != "${SHOW_ITEMS}" ]; then
  RSYNC_DATA=$(\
    rsync ${CFT_RSYNC_OPTS} \
      --exclude-from=/etc/cft/config-exclude.list \
      --include-from=/etc/cft/config-include.list \
      -f '- /*' \
      --dry-run -avicxH -n --no-t --delete --omit-dir-times -e "ssh -p ${CFT_PORT:-22} ${CFT_SSH_OPTS}" \
      "${CFT_HOST}:${CFT_ROOT}/" / \
    |head -n-3 \
    |tail -n +2)
  
  UNTRACKED_DIRS=$(echo "${RSYNC_DATA}" | grep '^\*deleting   .*/$' |sed 's#^\*deleting   #/#')
  UNTRACKED_FILES=$(echo "${RSYNC_DATA}" | grep '^\*deleting   .*[^/]$' |sed 's#^\*deleting   #/#')
  MISSING_DIRS=$(echo "${RSYNC_DATA}"  |grep '^cd+++++++++ ' |sed 's#^cd+++++++++ #/#')
  MISSING_FILES=$(echo "${RSYNC_DATA}"  |grep '^>f+++++++++ ' |sed 's#^>f+++++++++ #/#')
  MISSING_LINKS=$(echo "${RSYNC_DATA}"  |grep '^cL+++++++++ ' |sed 's#^cL+++++++++ #/#')
  MODIFIED_LINKS=$(echo "${RSYNC_DATA}"  |grep '^cLc\........ ' |sed 's#^cLc\........ #/#')
  MODIFIED_FILES=$(echo "${RSYNC_DATA}"  |grep '^>fc........ ' |sed 's#^>fc........ #/#')
  CHANGED_PERMS=$(echo "${RSYNC_DATA}"  |grep '^.....p..... ' |sed 's#^.....p..... #/#')
  CHANGED_OWNER=$(echo "${RSYNC_DATA}"  |grep '^......o.... ' |sed 's#^......o.... #/#')
  CHANGED_GROUP=$(echo "${RSYNC_DATA}"  |grep '^.......g... ' |sed 's#^.......g... #/#')
  UNKNOWN=$(echo "${RSYNC_DATA}" \
    |grep -v '^\(\*deleting\|..+++++++++\|cLc\........\|>fc........\|.....p.....\|......o....\|.......g...\) ')
  
  echo 'CONFIGS:'
  
  print_block 'UNTRACKED DIRS' "${UNTRACKED_DIRS}" D
  print_block 'UNTRACKED FILES' "${UNTRACKED_FILES}" F
  
  print_block 'MISSING DIRS' "${MISSING_DIRS}" d
  print_block 'MISSING FILES' "${MISSING_FILES}" f
  print_block 'MISSING LINKS' "${MISSING_LINKS}" l
  
  print_block 'MODIFIED LINKS' "${MODIFIED_LINKS}" s
  print_block 'MODIFIED FILES' "${MODIFIED_FILES}" c
  
  print_block 'CHANGED PERMISSIONS' "${CHANGED_PERMS}" p
  print_block 'CHANGED OWNER' "${CHANGED_OWNER}" o
  print_block 'CHANGED GROUP' "${CHANGED_GROUP}" g
  
  print_block 'UNKNOWN (!) CHANGE' "${UNKNOWN}" U
fi

if [ "${SHOW_ITEMS/[Eexbu]/}" != "${SHOW_ITEMS}" ]; then
  RSYNC_PACKAGE_USE=$(\
    rsync --dry-run -drvic -n --no-t --delete --omit-dir-times \
      -e "ssh -p ${CFT_PORT:-22} ${CFT_SSH_OPTS}" \
      -f '+ */*/IUSE' \
      -f '+ */*/USE' \
      -f '- */*/**' \
      -f '- .cache' \
      -f '- net-misc/cfengine*' \
      -f '- dev-db/tokyocabinet*' \
      "${CFT_HOST}:${CFT_ROOT}/var/db/pkg/" /var/db/pkg/ \
    |head -n-3 \
    |tail -n +2)
  
  RSYNC_PACKAGE=$(\
    echo "${RSYNC_PACKAGE_USE}" \
    |grep -v '^[^/]\+/$\|^[^/]\+$\|/I\?USE$' \
    |sed -e 's#/$##' -e 's/^cd+++++++++ /+ /' -e 's/^\*deleting   /- /' -e 's/^cannot delete non-empty directory: /- /' \
    |sort -nk2 \
    |uniq \
    |sed 's/-\([0-9]\)/ \1/' \
    |sort -k2 -Vk3 \
    |awk '{if (ln==$2) {print $1,$2,lv,"=>",$3; i=0} else {if (i==1) print ll; i=1}; ll=$0; ln=$2; lv=$3}END{if (i==1) print ll}')
  
  CHANGED_IUSE=$(\
          echo "${RSYNC_PACKAGE_USE}" \
    |grep '^.fc.*/IUSE$' \
    |sed 's#^........... ##')
  
  CHANGED_USE=$(\
          echo "${RSYNC_PACKAGE_USE}" \
    |grep '^.fc.*/USE$' \
    |sed 's#^........... ##')
  
  UNTRACKED_PACKAGES=$(echo "${RSYNC_PACKAGE}" | grep '^- [^=]\+$' |sed -e 's#^- ##' -e 's/ /-/')
  MISSING_PACKAGES=$(echo "${RSYNC_PACKAGE}"  |grep '^+ [^=]\+$' |sed -e 's#^+ ##' -e 's/ /-/')
  UPGRADE_PACKAGES=$(echo "${RSYNC_PACKAGE}"  |grep '^+ .\+=' |sed 's#^+ ##')
  DOWNGRADE_PACKAGES=$(echo "${RSYNC_PACKAGE}"  |grep '^- .\+=' |sed -e 's#^- ##' -e 's/ => / <= /')
  
  echo 'PACKAGES:'
  
  print_block 'UNTRACKED PACKAGES' "${UNTRACKED_PACKAGES}" E
  print_block 'MISSING PACKAGES' "${MISSING_PACKAGES}" e
  
  print_block 'UPGRADE PACKAGES' "${UPGRADE_PACKAGES}" x
  print_block 'DOWNGRADE PACKAGES' "${DOWNGRADE_PACKAGES}" b
  
  print_block 'CHANGED IUSE FLAGS' "${CHANGED_IUSE}" i
  print_block 'CHANGED USE FLAGS' "${CHANGED_USE}" u
fi
